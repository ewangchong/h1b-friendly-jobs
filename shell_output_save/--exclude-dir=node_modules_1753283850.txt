./src/lib/supabase.ts:const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFvZ3hiZmdrcnR1bGxydmpncnJmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwOTQ1MzYsImV4cCI6MjA2ODY3MDUzNn0.MMdKgUDKl9X-1JVVpGOLX3xQkdt7Y235i-MQGiNfVd4'
./docs/Production_Implementation_Summary.md:- Service role key: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...` (working)
./docs/End_to_End_Testing_Report.md:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFvZ3hiZmdrcnR1bGxydmpncnJmIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzA5NDUzNiwiZXhwIjoyMDY4NjcwNTM2fQ.JnMcYziqLmwPnkoPQs4o9Rqqj1t4c-7Anytf3aNstJ0
./dist/assets/index-piDzlKUW.js:`);const M=await D.signMessage(new TextEncoder().encode(N),"utf8");if(!M||!(M instanceof Uint8Array))throw new Error("@supabase/auth-js: Wallet signMessage() API returned an recognized value");P=M}}try{const{data:_,error:$}=await be(this.fetch,"POST",`${this.url}/token?grant_type=web3`,{headers:this.headers,body:Object.assign({chain:"solana",message:N,signature:Ib(P)},!((w=r.options)===null||w===void 0)&&w.captchaToken?{gotrue_meta_security:{captcha_token:(b=r.options)===null||b===void 0?void 0:b.captchaToken}}:null),xform:jr});if($)throw $;return!_||!_.session||!_.user?{data:{user:null,session:null},error:new Lo}:(_.session&&(await this._saveSession(_.session),await this._notifyAllSubscribers("SIGNED_IN",_.session)),{data:Object.assign({},_),error:$})}catch(_){if(fe(_))return{data:{user:null,session:null},error:_};throw _}}async _exchangeCodeForSession(r){const s=await $s(this.storage,`${this.storageKey}-code-verifier`),[o,l]=(s??"").split("/");try{const{data:u,error:d}=await be(this.fetch,"POST",`${this.url}/token?grant_type=pkce`,{headers:this.headers,body:{auth_code:r,code_verifier:o},xform:jr});if(await Gr(this.storage,`${this.storageKey}-code-verifier`),d)throw d;return!u||!u.session||!u.user?{data:{user:null,session:null,redirectType:null},error:new Lo}:(u.session&&(await this._saveSession(u.session),await this._notifyAllSubscribers("SIGNED_IN",u.session)),{data:Object.assign(Object.assign({},u),{redirectType:l??null}),error:d})}catch(u){if(fe(u))return{data:{user:null,session:null,redirectType:null},error:u};throw u}}async signInWithIdToken(r){try{const{options:s,provider:o,token:l,access_token:u,nonce:d}=r,f=await be(this.fetch,"POST",`${this.url}/token?grant_type=id_token`,{headers:this.headers,body:{provider:o,id_token:l,access_token:u,nonce:d,gotrue_meta_security:{captcha_token:s==null?void 0:s.captchaToken}},xform:jr}),{data:p,error:g}=f;return g?{data:{user:null,session:null},error:g}:!p||!p.session||!p.user?{data:{user:null,session:null},error:new Lo}:(p.session&&(await this._saveSession(p.session),await this._notifyAllSubscribers("SIGNED_IN",p.session)),{data:p,error:g})}catch(s){if(fe(s))return{data:{user:null,session:null},error:s};throw s}}async signInWithOtp(r){var s,o,l,u,d;try{if("email"in r){const{email:f,options:p}=r;let g=null,y=null;this.flowType==="pkce"&&([g,y]=await Rn(this.storage,this.storageKey));const{error:x}=await be(this.fetch,"POST",`${this.url}/otp`,{headers:this.headers,body:{email:f,data:(s=p==null?void 0:p.data)!==null&&s!==void 0?s:{},create_user:(o=p==null?void 0:p.shouldCreateUser)!==null&&o!==void 0?o:!0,gotrue_meta_security:{captcha_token:p==null?void 0:p.captchaToken},code_challenge:g,code_challenge_method:y},redirectTo:p==null?void 0:p.emailRedirectTo});return{data:{user:null,session:null},error:x}}if("phone"in r){const{phone:f,options:p}=r,{data:g,error:y}=await be(this.fetch,"POST",`${this.url}/otp`,{headers:this.headers,body:{phone:f,data:(l=p==null?void 0:p.data)!==null&&l!==void 0?l:{},create_user:(u=p==null?void 0:p.shouldCreateUser)!==null&&u!==void 0?u:!0,gotrue_meta_security:{captcha_token:p==null?void 0:p.captchaToken},channel:(d=p==null?void 0:p.channel)!==null&&d!==void 0?d:"sms"}});return{data:{user:null,session:null,messageId:g==null?void 0:g.message_id},error:y}}throw new Io("You must provide either an email or phone number.")}catch(f){if(fe(f))return{data:{user:null,session:null},error:f};throw f}}async verifyOtp(r){var s,o;try{let l,u;"options"in r&&(l=(s=r.options)===null||s===void 0?void 0:s.redirectTo,u=(o=r.options)===null||o===void 0?void 0:o.captchaToken);const{data:d,error:f}=await be(this.fetch,"POST",`${this.url}/verify`,{headers:this.headers,body:Object.assign(Object.assign({},r),{gotrue_meta_security:{captcha_token:u}}),redirectTo:l,xform:jr});if(f)throw f;if(!d)throw new Error("An error occurred on token verification.");const p=d.session,g=d.user;return p!=null&&p.access_token&&(await this._saveSession(p),await this._notifyAllSubscribers(r.type=="recovery"?"PASSWORD_RECOVERY":"SIGNED_IN",p)),{data:{user:g,session:p},error:null}}catch(l){if(fe(l))return{data:{user:null,session:null},error:l};throw l}}async signInWithSSO(r){var s,o,l;try{let u=null,d=null;return this.flowType==="pkce"&&([u,d]=await Rn(this.storage,this.storageKey)),await be(this.fetch,"POST",`${this.url}/sso`,{body:Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},"providerId"in r?{provider_id:r.providerId}:null),"domain"in r?{domain:r.domain}:null),{redirect_to:(o=(s=r.options)===null||s===void 0?void 0:s.redirectTo)!==null&&o!==void 0?o:void 0}),!((l=r==null?void 0:r.options)===null||l===void 0)&&l.captchaToken?{gotrue_meta_security:{captcha_token:r.options.captchaToken}}:null),{skip_http_redirect:!0,code_challenge:u,code_challenge_method:d}),headers:this.headers,xform:t1})}catch(u){if(fe(u))return{data:null,error:u};throw u}}async reauthenticate(){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._reauthenticate())}async _reauthenticate(){try{return await this._useSession(async r=>{const{data:{session:s},error:o}=r;if(o)throw o;if(!s)throw new es;const{error:l}=await be(this.fetch,"GET",`${this.url}/reauthenticate`,{headers:this.headers,jwt:s.access_token});return{data:{user:null,session:null},error:l}})}catch(r){if(fe(r))return{data:{user:null,session:null},error:r};throw r}}async resend(r){try{const s=`${this.url}/resend`;if("email"in r){const{email:o,type:l,options:u}=r,{error:d}=await be(this.fetch,"POST",s,{headers:this.headers,body:{email:o,type:l,gotrue_meta_security:{captcha_token:u==null?void 0:u.captchaToken}},redirectTo:u==null?void 0:u.emailRedirectTo});return{data:{user:null,session:null},error:d}}else if("phone"in r){const{phone:o,type:l,options:u}=r,{data:d,error:f}=await be(this.fetch,"POST",s,{headers:this.headers,body:{phone:o,type:l,gotrue_meta_security:{captcha_token:u==null?void 0:u.captchaToken}}});return{data:{user:null,session:null,messageId:d==null?void 0:d.message_id},error:f}}throw new Io("You must provide either an email or phone number and a type")}catch(s){if(fe(s))return{data:{user:null,session:null},error:s};throw s}}async getSession(){return await this.initializePromise,await this._acquireLock(-1,async()=>this._useSession(async s=>s))}async _acquireLock(r,s){this._debug("#_acquireLock","begin",r);try{if(this.lockAcquired){const o=this.pendingInLock.length?this.pendingInLock[this.pendingInLock.length-1]:Promise.resolve(),l=(async()=>(await o,await s()))();return this.pendingInLock.push((async()=>{try{await l}catch{}})()),l}return await this.lock(`lock:${this.storageKey}`,r,async()=>{this._debug("#_acquireLock","lock acquired for storage key",this.storageKey);try{this.lockAcquired=!0;const o=s();for(this.pendingInLock.push((async()=>{try{await o}catch{}})()),await o;this.pendingInLock.length;){const l=[...this.pendingInLock];await Promise.all(l),this.pendingInLock.splice(0,l.length)}return await o}finally{this._debug("#_acquireLock","lock released for storage key",this.storageKey),this.lockAcquired=!1}})}finally{this._debug("#_acquireLock","end")}}async _useSession(r){this._debug("#_useSession","begin");try{const s=await this.__loadSession();return await r(s)}finally{this._debug("#_useSession","end")}}async __loadSession(){this._debug("#__loadSession()","begin"),this.lockAcquired||this._debug("#__loadSession()","used outside of an acquired lock!",new Error().stack);try{let r=null;const s=await $s(this.storage,this.storageKey);if(this._debug("#getSession()","session from storage",s),s!==null&&(this._isValidSession(s)?r=s:(this._debug("#getSession()","session from storage is not valid"),await this._removeSession())),!r)return{data:{session:null},error:null};const o=r.expires_at?r.expires_at*1e3-Date.now()<iu:!1;if(this._debug("#__loadSession()",`session has${o?"":" not"} expired`,"expires_at",r.expires_at),!o){if(this.userStorage){const d=await $s(this.userStorage,this.storageKey+"-user");d!=null&&d.user?r.user=d.user:r.user=lu()}if(this.storage.isServer&&r.user){let d=this.suppressGetSessionWarning;r=new Proxy(r,{get:(p,g,y)=>(!d&&g==="user"&&(console.warn("Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server."),d=!0,this.suppressGetSessionWarning=!0),Reflect.get(p,g,y))})}return{data:{session:r},error:null}}const{session:l,error:u}=await this._callRefreshToken(r.refresh_token);return u?{data:{session:null},error:u}:{data:{session:l},error:null}}finally{this._debug("#__loadSession()","end")}}async getUser(r){return r?await this._getUser(r):(await this.initializePromise,await this._acquireLock(-1,async()=>await this._getUser()))}async _getUser(r){try{return r?await be(this.fetch,"GET",`${this.url}/user`,{headers:this.headers,jwt:r,xform:ss}):await this._useSession(async s=>{var o,l,u;const{data:d,error:f}=s;if(f)throw f;return!(!((o=d.session)===null||o===void 0)&&o.access_token)&&!this.hasCustomAuthorizationHeader?{data:{user:null},error:new es}:await be(this.fetch,"GET",`${this.url}/user`,{headers:this.headers,jwt:(u=(l=d.session)===null||l===void 0?void 0:l.access_token)!==null&&u!==void 0?u:void 0,xform:ss})})}catch(s){if(fe(s))return Cb(s)&&(await this._removeSession(),await Gr(this.storage,`${this.storageKey}-code-verifier`)),{data:{user:null},error:s};throw s}}async updateUser(r,s={}){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._updateUser(r,s))}async _updateUser(r,s={}){try{return await this._useSession(async o=>{const{data:l,error:u}=o;if(u)throw u;if(!l.session)throw new es;const d=l.session;let f=null,p=null;this.flowType==="pkce"&&r.email!=null&&([f,p]=await Rn(this.storage,this.storageKey));const{data:g,error:y}=await be(this.fetch,"PUT",`${this.url}/user`,{headers:this.headers,redirectTo:s==null?void 0:s.emailRedirectTo,body:Object.assign(Object.assign({},r),{code_challenge:f,code_challenge_method:p}),jwt:d.access_token,xform:ss});if(y)throw y;return d.user=g.user,await this._saveSession(d),await this._notifyAllSubscribers("USER_UPDATED",d),{data:{user:d.user},error:null}})}catch(o){if(fe(o))return{data:{user:null},error:o};throw o}}async setSession(r){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._setSession(r))}async _setSession(r){try{if(!r.access_token||!r.refresh_token)throw new es;const s=Date.now()/1e3;let o=s,l=!0,u=null;const{payload:d}=ou(r.access_token);if(d.exp&&(o=d.exp,l=o<=s),l){const{session:f,error:p}=await this._callRefreshToken(r.refresh_token);if(p)return{data:{user:null,session:null},error:p};if(!f)return{data:{user:null,session:null},error:null};u=f}else{const{data:f,error:p}=await this._getUser(r.access_token);if(p)throw p;u={access_token:r.access_token,refresh_token:r.refresh_token,user:f.user,token_type:"bearer",expires_in:o-s,expires_at:o},await this._saveSession(u),await this._notifyAllSubscribers("SIGNED_IN",u)}return{data:{user:u.user,session:u},error:null}}catch(s){if(fe(s))return{data:{session:null,user:null},error:s};throw s}}async refreshSession(r){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._refreshSession(r))}async _refreshSession(r){try{return await this._useSession(async s=>{var o;if(!r){const{data:d,error:f}=s;if(f)throw f;r=(o=d.session)!==null&&o!==void 0?o:void 0}if(!(r!=null&&r.refresh_token))throw new es;const{session:l,error:u}=await this._callRefreshToken(r.refresh_token);return u?{data:{user:null,session:null},error:u}:l?{data:{user:l.user,session:l},error:null}:{data:{user:null,session:null},error:null}})}catch(s){if(fe(s))return{data:{user:null,session:null},error:s};throw s}}async _getSessionFromURL(r,s){try{if(!Gt())throw new $o("No browser detected.");if(r.error||r.error_description||r.error_code)throw new $o(r.error_description||"Error in URL with unspecified error_description",{error:r.error||"unspecified_error",code:r.error_code||"unspecified_code"});switch(s){case"implicit":if(this.flowType==="pkce")throw new Zm("Not a valid PKCE flow url.");break;case"pkce":if(this.flowType==="implicit")throw new $o("Not a valid implicit grant flow url.");break;default:}if(s==="pkce"){if(this._debug("#_initialize()","begin","is PKCE flow",!0),!r.code)throw new Zm("No code detected.");const{data:H,error:L}=await this._exchangeCodeForSession(r.code);if(L)throw L;const D=new URL(window.location.href);return D.searchParams.delete("code"),window.history.replaceState(window.history.state,"",D.toString()),{data:{session:H.session,redirectType:null},error:null}}const{provider_token:o,provider_refresh_token:l,access_token:u,refresh_token:d,expires_in:f,expires_at:p,token_type:g}=r;if(!u||!f||!d||!g)throw new $o("No session defined in URL");const y=Math.round(Date.now()/1e3),x=parseInt(f);let w=y+x;p&&(w=parseInt(p));const b=w-y;b*1e3<=$n&&console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${b}s, should have been closer to ${x}s`);const N=w-x;y-N>=120?console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale",N,w,y):y-N<0&&console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew",N,w,y);const{data:P,error:_}=await this._getUser(u);if(_)throw _;const $={provider_token:o,provider_refresh_token:l,access_token:u,expires_in:x,expires_at:w,refresh_token:d,token_type:g,user:P.user};return window.location.hash="",this._debug("#_getSessionFromURL()","clearing window.location.hash"),{data:{session:$,redirectType:r.type},error:null}}catch(o){if(fe(o))return{data:{session:null,redirectType:null},error:o};throw o}}_isImplicitGrantCallback(r){return!!(r.access_token||r.error_description)}async _isPKCECallback(r){const s=await $s(this.storage,`${this.storageKey}-code-verifier`);return!!(r.code&&s)}async signOut(r={scope:"global"}){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._signOut(r))}async _signOut({scope:r}={scope:"global"}){return await this._useSession(async s=>{var o;const{data:l,error:u}=s;if(u)return{error:u};const d=(o=l.session)===null||o===void 0?void 0:o.access_token;if(d){const{error:f}=await this.admin.signOut(d,r);if(f&&!(Sb(f)&&(f.status===404||f.status===401||f.status===403)))return{error:f}}return r!=="others"&&(await this._removeSession(),await Gr(this.storage,`${this.storageKey}-code-verifier`)),{error:null}})}onAuthStateChange(r){const s=Mb(),o={id:s,callback:r,unsubscribe:()=>{this._debug("#unsubscribe()","state change callback with id removed",s),this.stateChangeEmitters.delete(s)}};return this._debug("#onAuthStateChange()","registered callback with id",s),this.stateChangeEmitters.set(s,o),(async()=>(await this.initializePromise,await this._acquireLock(-1,async()=>{this._emitInitialSession(s)})))(),{data:{subscription:o}}}async _emitInitialSession(r){return await this._useSession(async s=>{var o,l;try{const{data:{session:u},error:d}=s;if(d)throw d;await((o=this.stateChangeEmitters.get(r))===null||o===void 0?void 0:o.callback("INITIAL_SESSION",u)),this._debug("INITIAL_SESSION","callback id",r,"session",u)}catch(u){await((l=this.stateChangeEmitters.get(r))===null||l===void 0?void 0:l.callback("INITIAL_SESSION",null)),this._debug("INITIAL_SESSION","callback id",r,"error",u),console.error(u)}})}async resetPasswordForEmail(r,s={}){let o=null,l=null;this.flowType==="pkce"&&([o,l]=await Rn(this.storage,this.storageKey,!0));try{return await be(this.fetch,"POST",`${this.url}/recover`,{body:{email:r,code_challenge:o,code_challenge_method:l,gotrue_meta_security:{captcha_token:s.captchaToken}},headers:this.headers,redirectTo:s.redirectTo})}catch(u){if(fe(u))return{data:null,error:u};throw u}}async getUserIdentities(){var r;try{const{data:s,error:o}=await this.getUser();if(o)throw o;return{data:{identities:(r=s.user.identities)!==null&&r!==void 0?r:[]},error:null}}catch(s){if(fe(s))return{data:null,error:s};throw s}}async linkIdentity(r){var s;try{const{data:o,error:l}=await this._useSession(async u=>{var d,f,p,g,y;const{data:x,error:w}=u;if(w)throw w;const b=await this._getUrlForProvider(`${this.url}/user/identities/authorize`,r.provider,{redirectTo:(d=r.options)===null||d===void 0?void 0:d.redirectTo,scopes:(f=r.options)===null||f===void 0?void 0:f.scopes,queryParams:(p=r.options)===null||p===void 0?void 0:p.queryParams,skipBrowserRedirect:!0});return await be(this.fetch,"GET",b,{headers:this.headers,jwt:(y=(g=x.session)===null||g===void 0?void 0:g.access_token)!==null&&y!==void 0?y:void 0})});if(l)throw l;return Gt()&&!(!((s=r.options)===null||s===void 0)&&s.skipBrowserRedirect)&&window.location.assign(o==null?void 0:o.url),{data:{provider:r.provider,url:o==null?void 0:o.url},error:null}}catch(o){if(fe(o))return{data:{provider:r.provider,url:null},error:o};throw o}}async unlinkIdentity(r){try{return await this._useSession(async s=>{var o,l;const{data:u,error:d}=s;if(d)throw d;return await be(this.fetch,"DELETE",`${this.url}/user/identities/${r.identity_id}`,{headers:this.headers,jwt:(l=(o=u.session)===null||o===void 0?void 0:o.access_token)!==null&&l!==void 0?l:void 0})})}catch(s){if(fe(s))return{data:null,error:s};throw s}}async _refreshAccessToken(r){const s=`#_refreshAccessToken(${r.substring(0,5)}...)`;this._debug(s,"begin");try{const o=Date.now();return await zb(async l=>(l>0&&await Ub(200*Math.pow(2,l-1)),this._debug(s,"refreshing attempt",l),await be(this.fetch,"POST",`${this.url}/token?grant_type=refresh_token`,{body:{refresh_token:r},headers:this.headers,xform:jr})),(l,u)=>{const d=200*Math.pow(2,l);return u&&au(u)&&Date.now()+d-o<$n})}catch(o){if(this._debug(s,"error",o),fe(o))return{data:{session:null,user:null},error:o};throw o}finally{this._debug(s,"end")}}_isValidSession(r){return typeof r=="object"&&r!==null&&"access_token"in r&&"refresh_token"in r&&"expires_at"in r}async _handleProviderSignIn(r,s){const o=await this._getUrlForProvider(`${this.url}/authorize`,r,{redirectTo:s.redirectTo,scopes:s.scopes,queryParams:s.queryParams});return this._debug("#_handleProviderSignIn()","provider",r,"options",s,"url",o),Gt()&&!s.skipBrowserRedirect&&window.location.assign(o),{data:{provider:r,url:o},error:null}}async _recoverAndRefresh(){var r,s;const o="#_recoverAndRefresh()";this._debug(o,"begin");try{const l=await $s(this.storage,this.storageKey);if(l&&this.userStorage){let d=await $s(this.userStorage,this.storageKey+"-user");!this.storage.isServer&&Object.is(this.storage,this.userStorage)&&!d&&(d={user:l.user},await Mn(this.userStorage,this.storageKey+"-user",d)),l.user=(r=d==null?void 0:d.user)!==null&&r!==void 0?r:lu()}else if(l&&!l.user&&!l.user){const d=await $s(this.storage,this.storageKey+"-user");d&&(d!=null&&d.user)?(l.user=d.user,await Gr(this.storage,this.storageKey+"-user"),await Mn(this.storage,this.storageKey,l)):l.user=lu()}if(this._debug(o,"session from storage",l),!this._isValidSession(l)){this._debug(o,"session is not valid"),l!==null&&await this._removeSession();return}const u=((s=l.expires_at)!==null&&s!==void 0?s:1/0)*1e3-Date.now()<iu;if(this._debug(o,`session has${u?"":" not"} expired with margin of ${iu}s`),u){if(this.autoRefreshToken&&l.refresh_token){const{error:d}=await this._callRefreshToken(l.refresh_token);d&&(console.error(d),au(d)||(this._debug(o,"refresh failed with a non-retryable error, removing the session",d),await this._removeSession()))}}else if(l.user&&l.user.__isUserNotAvailableProxy===!0)try{const{data:d,error:f}=await this._getUser(l.access_token);!f&&(d!=null&&d.user)?(l.user=d.user,await this._saveSession(l),await this._notifyAllSubscribers("SIGNED_IN",l)):this._debug(o,"could not get user data, skipping SIGNED_IN notification")}catch(d){console.error("Error getting user data:",d),this._debug(o,"error getting user data, skipping SIGNED_IN notification",d)}else await this._notifyAllSubscribers("SIGNED_IN",l)}catch(l){this._debug(o,"error",l),console.error(l);return}finally{this._debug(o,"end")}}async _callRefreshToken(r){var s,o;if(!r)throw new es;if(this.refreshingDeferred)return this.refreshingDeferred.promise;const l=`#_callRefreshToken(${r.substring(0,5)}...)`;this._debug(l,"begin");try{this.refreshingDeferred=new Go;const{data:u,error:d}=await this._refreshAccessToken(r);if(d)throw d;if(!u.session)throw new es;await this._saveSession(u.session),await this._notifyAllSubscribers("TOKEN_REFRESHED",u.session);const f={session:u.session,error:null};return this.refreshingDeferred.resolve(f),f}catch(u){if(this._debug(l,"error",u),fe(u)){const d={session:null,error:u};return au(u)||await this._removeSession(),(s=this.refreshingDeferred)===null||s===void 0||s.resolve(d),d}throw(o=this.refreshingDeferred)===null||o===void 0||o.reject(u),u}finally{this.refreshingDeferred=null,this._debug(l,"end")}}async _notifyAllSubscribers(r,s,o=!0){const l=`#_notifyAllSubscribers(${r})`;this._debug(l,"begin",s,`broadcast = ${o}`);try{this.broadcastChannel&&o&&this.broadcastChannel.postMessage({event:r,session:s});const u=[],d=Array.from(this.stateChangeEmitters.values()).map(async f=>{try{await f.callback(r,s)}catch(p){u.push(p)}});if(await Promise.all(d),u.length>0){for(let f=0;f<u.length;f+=1)console.error(u[f]);throw u[0]}}finally{this._debug(l,"end")}}async _saveSession(r){this._debug("#_saveSession()",r),this.suppressGetSessionWarning=!0;const s=Object.assign({},r),o=s.user&&s.user.__isUserNotAvailableProxy===!0;if(this.userStorage){!o&&s.user&&await Mn(this.userStorage,this.storageKey+"-user",{user:s.user});const l=Object.assign({},s);delete l.user;const u=np(l);await Mn(this.storage,this.storageKey,u)}else{const l=np(s);await Mn(this.storage,this.storageKey,l)}}async _removeSession(){this._debug("#_removeSession()"),await Gr(this.storage,this.storageKey),await Gr(this.storage,this.storageKey+"-code-verifier"),await Gr(this.storage,this.storageKey+"-user"),this.userStorage&&await Gr(this.userStorage,this.storageKey+"-user"),await this._notifyAllSubscribers("SIGNED_OUT",null)}_removeVisibilityChangedCallback(){this._debug("#_removeVisibilityChangedCallback()");const r=this.visibilityChangedCallback;this.visibilityChangedCallback=null;try{r&&Gt()&&(window!=null&&window.removeEventListener)&&window.removeEventListener("visibilitychange",r)}catch(s){console.error("removing visibilitychange callback failed",s)}}async _startAutoRefresh(){await this._stopAutoRefresh(),this._debug("#_startAutoRefresh()");const r=setInterval(()=>this._autoRefreshTokenTick(),$n);this.autoRefreshTicker=r,r&&typeof r=="object"&&typeof r.unref=="function"?r.unref():typeof Deno<"u"&&typeof Deno.unrefTimer=="function"&&Deno.unrefTimer(r),setTimeout(async()=>{await this.initializePromise,await this._autoRefreshTokenTick()},0)}async _stopAutoRefresh(){this._debug("#_stopAutoRefresh()");const r=this.autoRefreshTicker;this.autoRefreshTicker=null,r&&clearInterval(r)}async startAutoRefresh(){this._removeVisibilityChangedCallback(),await this._startAutoRefresh()}async stopAutoRefresh(){this._removeVisibilityChangedCallback(),await this._stopAutoRefresh()}async _autoRefreshTokenTick(){this._debug("#_autoRefreshTokenTick()","begin");try{await this._acquireLock(0,async()=>{try{const r=Date.now();try{return await this._useSession(async s=>{const{data:{session:o}}=s;if(!o||!o.refresh_token||!o.expires_at){this._debug("#_autoRefreshTokenTick()","no session");return}const l=Math.floor((o.expires_at*1e3-r)/$n);this._debug("#_autoRefreshTokenTick()",`access token expires in ${l} ticks, a tick lasts ${$n}ms, refresh threshold is ${Mu} ticks`),l<=Mu&&await this._callRefreshToken(o.refresh_token)})}catch(s){console.error("Auto refresh tick failed with error. This is likely a transient error.",s)}}finally{this._debug("#_autoRefreshTokenTick()","end")}})}catch(r){if(r.isAcquireTimeout||r instanceof wg)this._debug("auto refresh token tick lock not available");else throw r}}async _handleVisibilityChange(){if(this._debug("#_handleVisibilityChange()"),!Gt()||!(window!=null&&window.addEventListener))return this.autoRefreshToken&&this.startAutoRefresh(),!1;try{this.visibilityChangedCallback=async()=>await this._onVisibilityChanged(!1),window==null||window.addEventListener("visibilitychange",this.visibilityChangedCallback),await this._onVisibilityChanged(!0)}catch(r){console.error("_handleVisibilityChange",r)}}async _onVisibilityChanged(r){const s=`#_onVisibilityChanged(${r})`;this._debug(s,"visibilityState",document.visibilityState),document.visibilityState==="visible"?(this.autoRefreshToken&&this._startAutoRefresh(),r||(await this.initializePromise,await this._acquireLock(-1,async()=>{if(document.visibilityState!=="visible"){this._debug(s,"acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting");return}await this._recoverAndRefresh()}))):document.visibilityState==="hidden"&&this.autoRefreshToken&&this._stopAutoRefresh()}async _getUrlForProvider(r,s,o){const l=[`provider=${encodeURIComponent(s)}`];if(o!=null&&o.redirectTo&&l.push(`redirect_to=${encodeURIComponent(o.redirectTo)}`),o!=null&&o.scopes&&l.push(`scopes=${encodeURIComponent(o.scopes)}`),this.flowType==="pkce"){const[u,d]=await Rn(this.storage,this.storageKey),f=new URLSearchParams({code_challenge:`${encodeURIComponent(u)}`,code_challenge_method:`${encodeURIComponent(d)}`});l.push(f.toString())}if(o!=null&&o.queryParams){const u=new URLSearchParams(o.queryParams);l.push(u.toString())}return o!=null&&o.skipBrowserRedirect&&l.push(`skip_http_redirect=${o.skipBrowserRedirect}`),`${r}?${l.join("&")}`}async _unenroll(r){try{return await this._useSession(async s=>{var o;const{data:l,error:u}=s;return u?{data:null,error:u}:await be(this.fetch,"DELETE",`${this.url}/factors/${r.factorId}`,{headers:this.headers,jwt:(o=l==null?void 0:l.session)===null||o===void 0?void 0:o.access_token})})}catch(s){if(fe(s))return{data:null,error:s};throw s}}async _enroll(r){try{return await this._useSession(async s=>{var o,l;const{data:u,error:d}=s;if(d)return{data:null,error:d};const f=Object.assign({friendly_name:r.friendlyName,factor_type:r.factorType},r.factorType==="phone"?{phone:r.phone}:{issuer:r.issuer}),{data:p,error:g}=await be(this.fetch,"POST",`${this.url}/factors`,{body:f,headers:this.headers,jwt:(o=u==null?void 0:u.session)===null||o===void 0?void 0:o.access_token});return g?{data:null,error:g}:(r.factorType==="totp"&&(!((l=p==null?void 0:p.totp)===null||l===void 0)&&l.qr_code)&&(p.totp.qr_code=`data:image/svg+xml;utf-8,${p.totp.qr_code}`),{data:p,error:null})})}catch(s){if(fe(s))return{data:null,error:s};throw s}}async _verify(r){return this._acquireLock(-1,async()=>{try{return await this._useSession(async s=>{var o;const{data:l,error:u}=s;if(u)return{data:null,error:u};const{data:d,error:f}=await be(this.fetch,"POST",`${this.url}/factors/${r.factorId}/verify`,{body:{code:r.code,challenge_id:r.challengeId},headers:this.headers,jwt:(o=l==null?void 0:l.session)===null||o===void 0?void 0:o.access_token});return f?{data:null,error:f}:(await this._saveSession(Object.assign({expires_at:Math.round(Date.now()/1e3)+d.expires_in},d)),await this._notifyAllSubscribers("MFA_CHALLENGE_VERIFIED",d),{data:d,error:f})})}catch(s){if(fe(s))return{data:null,error:s};throw s}})}async _challenge(r){return this._acquireLock(-1,async()=>{try{return await this._useSession(async s=>{var o;const{data:l,error:u}=s;return u?{data:null,error:u}:await be(this.fetch,"POST",`${this.url}/factors/${r.factorId}/challenge`,{body:{channel:r.channel},headers:this.headers,jwt:(o=l==null?void 0:l.session)===null||o===void 0?void 0:o.access_token})})}catch(s){if(fe(s))return{data:null,error:s};throw s}})}async _challengeAndVerify(r){const{data:s,error:o}=await this._challenge({factorId:r.factorId});return o?{data:null,error:o}:await this._verify({factorId:r.factorId,challengeId:s.id,code:r.code})}async _listFactors(){const{data:{user:r},error:s}=await this.getUser();if(s)return{data:null,error:s};const o=(r==null?void 0:r.factors)||[],l=o.filter(d=>d.factor_type==="totp"&&d.status==="verified"),u=o.filter(d=>d.factor_type==="phone"&&d.status==="verified");return{data:{all:o,totp:l,phone:u},error:null}}async _getAuthenticatorAssuranceLevel(){return this._acquireLock(-1,async()=>await this._useSession(async r=>{var s,o;const{data:{session:l},error:u}=r;if(u)return{data:null,error:u};if(!l)return{data:{currentLevel:null,nextLevel:null,currentAuthenticationMethods:[]},error:null};const{payload:d}=ou(l.access_token);let f=null;d.aal&&(f=d.aal);let p=f;((o=(s=l.user.factors)===null||s===void 0?void 0:s.filter(x=>x.status==="verified"))!==null&&o!==void 0?o:[]).length>0&&(p="aal2");const y=d.amr||[];return{data:{currentLevel:f,nextLevel:p,currentAuthenticationMethods:y},error:null}}))}async fetchJwk(r,s={keys:[]}){let o=s.keys.find(f=>f.kid===r);if(o)return o;const l=Date.now();if(o=this.jwks.keys.find(f=>f.kid===r),o&&this.jwks_cached_at+Nb>l)return o;const{data:u,error:d}=await be(this.fetch,"GET",`${this.url}/.well-known/jwks.json`,{headers:this.headers});if(d)throw d;return!u.keys||u.keys.length===0||(this.jwks=u,this.jwks_cached_at=l,o=u.keys.find(f=>f.kid===r),!o)?null:o}async getClaims(r,s={}){try{let o=r;if(!o){const{data:b,error:N}=await this.getSession();if(N||!b.session)return{data:null,error:N};o=b.session.access_token}const{header:l,payload:u,signature:d,raw:{header:f,payload:p}}=ou(o);s!=null&&s.allowExpired||Qb(u.exp);const g=!l.alg||l.alg.startsWith("HS")||!l.kid||!("crypto"in globalThis&&"subtle"in globalThis.crypto)?null:await this.fetchJwk(l.kid,s!=null&&s.keys?{keys:s.keys}:s==null?void 0:s.jwks);if(!g){const{error:b}=await this.getUser(o);if(b)throw b;return{data:{claims:u,header:l,signature:d},error:null}}const y=Kb(l.alg),x=await crypto.subtle.importKey("jwk",g,y,!0,["verify"]);if(!await crypto.subtle.verify(y,x,d,Lb(`${f}.${p}`)))throw new Uu("Invalid JWT signature");return{data:{claims:u,header:l,signature:d},error:null}}catch(o){if(fe(o))return{data:null,error:o};throw o}}}oa.nextInstanceID=0;const d1=oa;class h1 extends d1{constructor(r){super(r)}}var f1=function(n,r,s,o){function l(u){return u instanceof s?u:new s(function(d){d(u)})}return new(s||(s=Promise))(function(u,d){function f(y){try{g(o.next(y))}catch(x){d(x)}}function p(y){try{g(o.throw(y))}catch(x){d(x)}}function g(y){y.done?u(y.value):l(y.value).then(f,p)}g((o=o.apply(n,r||[])).next())})};class m1{constructor(r,s,o){var l,u,d;if(this.supabaseUrl=r,this.supabaseKey=s,!r)throw new Error("supabaseUrl is required.");if(!s)throw new Error("supabaseKey is required.");const f=xb(r),p=new URL(f);this.realtimeUrl=new URL("realtime/v1",p),this.realtimeUrl.protocol=this.realtimeUrl.protocol.replace("http","ws"),this.authUrl=new URL("auth/v1",p),this.storageUrl=new URL("storage/v1",p),this.functionsUrl=new URL("functions/v1",p);const g=`sb-${p.hostname.split(".")[0]}-auth-token`,y={db:ub,realtime:hb,auth:Object.assign(Object.assign({},db),{storageKey:g}),global:cb},x=vb(o??{},y);this.storageKey=(l=x.auth.storageKey)!==null&&l!==void 0?l:"",this.headers=(u=x.global.headers)!==null&&u!==void 0?u:{},x.accessToken?(this.accessToken=x.accessToken,this.auth=new Proxy({},{get:(w,b)=>{throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(b)} is not possible`)}})):this.auth=this._initSupabaseAuthClient((d=x.auth)!==null&&d!==void 0?d:{},this.headers,x.global.fetch),this.fetch=gb(s,this._getAccessToken.bind(this),x.global.fetch),this.realtime=this._initRealtimeClient(Object.assign({headers:this.headers,accessToken:this._getAccessToken.bind(this)},x.realtime)),this.rest=new Rw(new URL("rest/v1",p).href,{headers:this.headers,schema:x.db.schema,fetch:this.fetch}),x.accessToken||this._listenForAuthEvents()}get functions(){return new ww(this.functionsUrl.href,{headers:this.headers,customFetch:this.fetch})}get storage(){return new ab(this.storageUrl.href,this.headers,this.fetch)}from(r){return this.rest.from(r)}schema(r){return this.rest.schema(r)}rpc(r,s={},o={}){return this.rest.rpc(r,s,o)}channel(r,s={config:{}}){return this.realtime.channel(r,s)}getChannels(){return this.realtime.getChannels()}removeChannel(r){return this.realtime.removeChannel(r)}removeAllChannels(){return this.realtime.removeAllChannels()}_getAccessToken(){var r,s;return f1(this,void 0,void 0,function*(){if(this.accessToken)return yield this.accessToken();const{data:o}=yield this.auth.getSession();return(s=(r=o.session)===null||r===void 0?void 0:r.access_token)!==null&&s!==void 0?s:null})}_initSupabaseAuthClient({autoRefreshToken:r,persistSession:s,detectSessionInUrl:o,storage:l,storageKey:u,flowType:d,lock:f,debug:p},g,y){const x={Authorization:`Bearer ${this.supabaseKey}`,apikey:`${this.supabaseKey}`};return new h1({url:this.authUrl.href,headers:Object.assign(Object.assign({},x),g),storageKey:u,autoRefreshToken:r,persistSession:s,detectSessionInUrl:o,storage:l,flowType:d,lock:f,debug:p,fetch:y,hasCustomAuthorizationHeader:"Authorization"in this.headers})}_initRealtimeClient(r){return new Jw(this.realtimeUrl.href,Object.assign(Object.assign({},r),{params:Object.assign({apikey:this.supabaseKey},r==null?void 0:r.params)}))}_listenForAuthEvents(){return this.auth.onAuthStateChange((s,o)=>{this._handleTokenChanged(s,"CLIENT",o==null?void 0:o.access_token)})}_handleTokenChanged(r,s,o){(r==="TOKEN_REFRESHED"||r==="SIGNED_IN")&&this.changedAccessToken!==o?this.changedAccessToken=o:r==="SIGNED_OUT"&&(this.realtime.setAuth(),s=="STORAGE"&&this.auth.signOut(),this.changedAccessToken=void 0)}}const p1=(n,r,s)=>new m1(n,r,s),g1="https://qogxbfgkrtullrvjgrrf.supabase.co",y1="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFvZ3hiZmdrcnR1bGxydmpncnJmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwOTQ1MzYsImV4cCI6MjA2ODY3MDUzNn0.MMdKgUDKl9X-1JVVpGOLX3xQkdt7Y235i-MQGiNfVd4",le=p1(g1,y1),bg=O.createContext(void 0);function x1({children:n}){const[r,s]=O.useState(null),[o,l]=O.useState(!0);O.useEffect(()=>{async function g(){l(!0);try{const{data:{user:x}}=await le.auth.getUser();s(x)}catch(x){console.error("Error loading user:",x)}finally{l(!1)}}g();const{data:{subscription:y}}=le.auth.onAuthStateChange((x,w)=>{s((w==null?void 0:w.user)||null),(x==="SIGNED_IN"||x==="SIGNED_OUT")&&l(!1)});return()=>y.unsubscribe()},[]);async function u(g,y){return await le.auth.signInWithPassword({email:g,password:y})}async function d(g,y,x){const{data:w,error:b}=await le.auth.signUp({email:g,password:y,options:{data:{full_name:x||""},emailRedirectTo:`${window.location.protocol}//${window.location.host}/auth/callback`}});return{data:w,error:b}}async function f(){return await le.auth.signOut()}async function p(){const{data:{user:g},error:y}=await le.auth.getUser();return y?(console.error("Error getting user:",y),null):g}return a.jsx(bg.Provider,{value:{user:r,loading:o,signIn:u,signUp:d,signOut:f,getCurrentUser:p},children:n})}function Tr(){const n=O.useContext(bg);if(n===void 0)throw new Error("useAuth must be used within an AuthProvider");return n}/**
